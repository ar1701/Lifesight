<%- include('partials/header') -%>

<div class="container-fluid">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-md-3 col-lg-2 d-md-block bg-light sidebar">
      <div class="position-sticky pt-3">
        <ul class="nav flex-column">
          <li class="nav-item">
            <a class="nav-link" href="/app">
              <i class="bi bi-house me-2"></i>Home
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/app/dashboards">
              <i class="bi bi-grid-3x3-gap-fill me-2"></i>All Dashboards
            </a>
          </li>
        </ul>
      </div>
    </div>

    <!-- Main content -->
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div
        class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
      >
        <div>
          <h1 class="h2"><%= dashboard.name %></h1>
          <% if(dashboard.description) { %>
          <p class="text-muted mb-0"><%= dashboard.description %></p>
          <% } %>
        </div>
        <div class="btn-toolbar mb-2 mb-md-0">
          <div class="btn-group me-2">
            <button
              type="button"
              class="btn btn-outline-secondary"
              onclick="history.back()"
            >
              <i class="bi bi-arrow-left me-2"></i>Back
            </button>
          </div>
        </div>
      </div>

      <!-- Dashboard Widgets -->
      <div class="row g-4">
        <% if(widgets && widgets.length > 0) { %> <% widgets.forEach(widget => {
        %>
        <div class="col-md-6 col-lg-4">
          <div
            class="card widget-container h-100"
            data-widget-id="<%= widget._id %>"
          >
            <div
              class="card-header d-flex justify-content-between align-items-center"
            >
              <span class="fw-bold">
                <% if(widget.type === 'chart') { %>
                <i class="bi bi-bar-chart-line me-2"></i>Chart <% } else { %>
                <i class="bi bi-table me-2"></i>Table <% } %>
              </span>
              <button
                type="button"
                class="btn btn-sm btn-outline-danger delete-widget-btn"
                title="Delete Widget"
              >
                <i class="bi bi-trash"></i>
              </button>
            </div>
            <div class="card-body">
              <!-- Widget content will be rendered by JavaScript -->
            </div>
          </div>
        </div>
        <% }) %> <% } else { %>
        <div class="col-12">
          <div class="text-center py-5">
            <i class="bi bi-grid-3x3-gap display-1 text-muted"></i>
            <h3 class="mt-3">No Widgets Yet</h3>
            <p class="text-muted">
              This dashboard is empty. Go to the home page to generate charts
              and tables, then add them to this dashboard.
            </p>
            <a href="/app" class="btn btn-primary">
              <i class="bi bi-plus-circle me-2"></i>Create Widgets
            </a>
          </div>
        </div>
        <% } %>
      </div>
    </main>
  </div>
</div>

<%- include('partials/footer') -%>

<script>
  window.savedWidgets = <%- JSON.stringify(widgets || []) %>;
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Load and render widgets
    function loadDashboardWidgets() {
      if (window.savedWidgets && window.savedWidgets.length > 0) {
        const widgetsData = window.savedWidgets;
        widgetsData.forEach((widget) => {
          renderWidgetOnDashboard(widget);
        });
      }
    }

    // Render widget on dashboard using iframe
    function renderWidgetOnDashboard(widget) {
      const widgetContainer = document.querySelector(
        `[data-widget-id="${widget._id}"]`
      );
      if (!widgetContainer) return;

      const body = widgetContainer.querySelector(".card-body");
      if (!body) return;

      try {
        // Create iframe for widget
        const iframe = document.createElement("iframe");
        iframe.style.width = "100%";
        iframe.style.height = "400px";
        iframe.style.border = "none";
        iframe.style.borderRadius = "8px";
        iframe.style.backgroundColor = "#fff";
        
        // Generate content for iframe
        let iframeContent = generateIframeContent(widget);
        
        // Set iframe content
        iframe.srcdoc = iframeContent;
        
        body.appendChild(iframe);
      } catch (error) {
        console.error("Error rendering widget:", error);
        body.innerHTML = '<p class="text-muted">Error rendering widget</p>';
      }
    }

    // Generate iframe content for widgets
    function generateIframeContent(widget) {
      let content = `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Widget</title>
          <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
          <style>
            body { 
              margin: 0; 
              padding: 20px; 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
              background: #fff;
            }
            .widget-container { 
              width: 100%; 
              height: 100%; 
              display: flex; 
              align-items: center; 
              justify-content: center; 
            }
            canvas { 
              max-width: 100%; 
              max-height: 100%; 
            }
            .table-responsive { 
              width: 100%; 
              overflow-x: auto; 
            }
            table { 
              width: 100%; 
              border-collapse: collapse; 
            }
            th, td { 
              padding: 8px 12px; 
              text-align: left; 
              border-bottom: 1px solid #ddd; 
            }
            th { 
              background-color: #f8f9fa; 
              font-weight: 600; 
            }
            tr:hover { 
              background-color: #f5f5f5; 
            }
          </style>
        </head>
        <body>
          <div class="widget-container">
      `;

      if (widget.type === "chart") {
        content += `
          <canvas id="widgetChart" width="400" height="300"></canvas>
          <script>
            const ctx = document.getElementById('widgetChart').getContext('2d');
            const config = ${JSON.stringify(widget.config)};
            new Chart(ctx, config);
          </script>
        `;
      } else if (widget.type === "table") {
        const tableHtml = generateTable(widget.data, false);
        content += tableHtml;
      }

      content += `
          </div>
        </body>
        </html>
      `;

      return content;
    }

    // Generate table HTML
    function generateTable(data, showPagination = true) {
      console.log("Dashboard generateTable called with:", data);
      
      if (!data) {
        return '<p class="text-muted">No data available</p>';
      }

      let headers, rows;

      // Handle different data structures
      if (data.data && data.data.headers && data.data.rows) {
        headers = data.data.headers;
        rows = data.data.rows;
      } else if (data.headers && data.rows) {
        headers = data.headers;
        rows = data.rows;
      } else if (Array.isArray(data) && data.length > 0) {
        // Handle case where data is directly an array
        if (Array.isArray(data[0])) {
          headers = data[0];
          rows = data.slice(1);
        } else {
          headers = Object.keys(data[0] || {});
          rows = data;
        }
      } else {
        console.error("Invalid table data structure:", data);
        return '<p class="text-muted">Invalid table data structure</p>';
      }

      if (!headers || !rows || headers.length === 0 || rows.length === 0) {
        console.error("No valid headers or rows found:", { headers, rows });
        return '<p class="text-muted">No data available</p>';
      }

      let tableHtml =
        '<div class="table-responsive"><table class="table table-striped table-hover">';

      // Header
      tableHtml += '<thead class="table-dark"><tr>';
      headers.forEach((header) => {
        tableHtml += `<th>${header}</th>`;
      });
      tableHtml += "</tr></thead>";

      // Body
      tableHtml += "<tbody>";
      rows.forEach((row) => {
        tableHtml += "<tr>";
        const rowData = Array.isArray(row) ? row : headers.map((h) => row[h] || "");
        rowData.forEach((cell) => {
          tableHtml += `<td>${cell || ''}</td>`;
        });
        tableHtml += "</tr>";
      });
      tableHtml += "</tbody></table></div>";

      return tableHtml;
    }

    // Delete widget functionality
    document.addEventListener("click", (event) => {
      if (event.target.closest(".delete-widget-btn")) {
        const widgetContainer = event.target.closest(".widget-container");
        const widgetId = widgetContainer.dataset.widgetId;
        deleteWidget(widgetId, widgetContainer);
      }
    });

    async function deleteWidget(widgetId, widgetElement) {
      if (
        !confirm(
          "Are you sure you want to delete this widget? This action cannot be undone."
        )
      ) {
        return;
      }

      try {
        const response = await fetch(`/api/widgets/${widgetId}`, {
          method: "DELETE",
        });
        const result = await response.json();

        if (response.ok) {
          const columnDiv = widgetElement.closest(".col-md-6, .col-lg-4");
          columnDiv.remove();

          // Check if no widgets remain
          const remainingWidgets =
            document.querySelectorAll(".widget-container");
          if (remainingWidgets.length === 0) {
            location.reload(); // Reload to show empty state
          }
        } else {
          throw new Error(result.error || "Failed to delete widget");
        }
      } catch (error) {
        console.error("Error deleting widget:", error);
        alert(`Error deleting widget: ${error.message}`);
      }
    }

    // Initialize
    loadDashboardWidgets();
  });
</script>

<style>
  .sidebar {
    position: fixed;
    top: 56px;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, 0.1);
  }

  .sidebar .nav-link {
    color: #333;
    font-weight: 500;
  }

  .widget-container {
    transition: transform 0.2s ease-in-out;
  }

  .widget-container:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
</style>
