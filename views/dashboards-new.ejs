<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link href="/css/modern.css" rel="stylesheet" />
  </head>
  <body>
    <div class="app-container">
      <%- include('partials/navbar', { currentPage: 'dashboards' }) -%>

      <div class="main-layout">
        <%- include('partials/sidebar') -%>

        <main class="main-content">
          <!-- Page Header -->
          <div class="mb-8">
            <div class="flex items-center justify-between">
              <div>
                <h1 class="mb-2">My Dashboards</h1>
                <p class="text-gray-600">
                  Organize and manage your data visualizations
                </p>
              </div>
              <button
                class="btn btn-primary"
                onclick="showCreateDashboardModal()"
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                    fill="currentColor"
                  />
                </svg>
                Create Dashboard
              </button>
            </div>
          </div>

          <!-- Dashboards Grid -->
          <div class="dashboard-grid" id="dashboards-grid">
            <% if(dashboards && dashboards.length > 0) { %> <%
            dashboards.forEach(dashboard => { %>
            <div
              class="dashboard-card"
              onclick="window.location.href='/app/dashboard/<%= dashboard._id %>'"
            >
              <div class="flex items-center justify-between mb-4">
                <h3><%= dashboard.name %></h3>
                <div class="dropdown">
                  <button
                    class="btn btn-ghost btn-sm"
                    type="button"
                    data-bs-toggle="dropdown"
                  >
                    <svg
                      width="16"
                      height="16"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M12 8C13.1 8 14 7.1 14 6C14 4.9 13.1 4 12 4C10.9 4 10 4.9 10 6C10 7.1 10.9 8 12 8ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10ZM12 16C10.9 16 10 16.9 10 18C10 19.1 10.9 20 12 20C13.1 20 14 19.1 14 18C14 16.9 13.1 16 12 16Z"
                        fill="currentColor"
                      />
                    </svg>
                  </button>
                  <ul class="dropdown-menu">
                    <li>
                      <a
                        class="dropdown-item"
                        href="/app/dashboard/<%= dashboard._id %>"
                      >
                        <svg
                          width="16"
                          height="16"
                          viewBox="0 0 24 24"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.24 17 7 14.76 7 12C7 9.24 9.24 7 12 7C14.76 7 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 9 10.34 9 12C9 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z"
                            fill="currentColor"
                          />
                        </svg>
                        View
                      </a>
                    </li>
                    <li>
                      <a
                        class="dropdown-item edit-dashboard-btn"
                        href="#"
                        data-dashboard-id="<%= dashboard._id %>"
                      >
                        <svg
                          width="16"
                          height="16"
                          viewBox="0 0 24 24"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M3 17.25V21H6.75L17.81 9.94L14.06 6.19L3 17.25ZM20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.35 2.9 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04Z"
                            fill="currentColor"
                          />
                        </svg>
                        Edit
                      </a>
                    </li>
                    <li><hr class="dropdown-divider" /></li>
                    <li>
                      <a
                        class="dropdown-item delete-dashboard-btn text-error"
                        href="#"
                        data-dashboard-id="<%= dashboard._id %>"
                      >
                        <svg
                          width="16"
                          height="16"
                          viewBox="0 0 24 24"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M6 19C6 20.1 6.9 21 8 21H16C17.1 21 18 20.1 18 19V7H6V19ZM19 4H15.5L14.5 3H9.5L8.5 4H5V6H19V4Z"
                            fill="currentColor"
                          />
                        </svg>
                        Delete
                      </a>
                    </li>
                  </ul>
                </div>
              </div>

              <% if(dashboard.description) { %>
              <p class="mb-4"><%= dashboard.description %></p>
              <% } %>

              <div class="dashboard-meta">
                <span
                  >Updated <%= new
                  Date(dashboard.updatedAt).toLocaleDateString() %></span
                >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M8.59 16.59L13.17 12L8.59 7.41L10 6L16 12L10 18L8.59 16.59Z"
                    fill="currentColor"
                  />
                </svg>
              </div>
            </div>
            <% }) %> <% } else { %>
            <div class="empty-state">
              <div class="empty-state-icon">
                <svg
                  width="64"
                  height="64"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M3 13H11V3H3V13ZM3 21H11V15H3V21ZM13 21H21V11H13V21ZM13 3V9H21V3H13Z"
                    fill="currentColor"
                  />
                </svg>
              </div>
              <h3>No Dashboards Yet</h3>
              <p>
                Create your first dashboard to start organizing your data
                visualizations.
              </p>
              <button
                class="btn btn-primary"
                onclick="showCreateDashboardModal()"
              >
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                    fill="currentColor"
                  />
                </svg>
                Create Your First Dashboard
              </button>
            </div>
            <% } %>
          </div>
        </main>
      </div>
    </div>

    <!-- Create Dashboard Modal -->
    <div class="modal fade" id="createDashboardModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Create New Dashboard</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body">
            <form id="createDashboardForm">
              <div class="form-group">
                <label class="form-label">Dashboard Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="dashboardName"
                  required
                />
              </div>
              <div class="form-group">
                <label class="form-label">Description (Optional)</label>
                <textarea
                  class="form-control"
                  id="dashboardDescription"
                  rows="3"
                ></textarea>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary"
              id="createDashboardBtn"
            >
              Create Dashboard
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Edit Dashboard Modal -->
    <div class="modal fade" id="editDashboardModal" tabindex="-1">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Edit Dashboard</h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
            ></button>
          </div>
          <div class="modal-body">
            <form id="editDashboardForm">
              <input type="hidden" id="editDashboardId" />
              <div class="form-group">
                <label class="form-label">Dashboard Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="editDashboardName"
                  required
                />
              </div>
              <div class="form-group">
                <label class="form-label">Description (Optional)</label>
                <textarea
                  class="form-control"
                  id="editDashboardDescription"
                  rows="3"
                ></textarea>
              </div>
            </form>
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="button"
              class="btn btn-primary"
              id="updateDashboardBtn"
            >
              Update Dashboard
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Create Dashboard
        document
          .getElementById("createDashboardBtn")
          .addEventListener("click", async function () {
            const name = document.getElementById("dashboardName").value.trim();
            const description = document
              .getElementById("dashboardDescription")
              .value.trim();

            if (!name) {
              alert("Please enter a dashboard name");
              return;
            }

            try {
              const response = await fetch("/api/dashboards", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ name, description }),
              });

              const result = await response.json();

              if (response.ok) {
                location.reload(); // Reload to show new dashboard
              } else {
                throw new Error(result.error || "Failed to create dashboard");
              }
            } catch (error) {
              console.error("Error creating dashboard:", error);
              alert(`Error creating dashboard: ${error.message}`);
            }
          });

        // Edit Dashboard
        document.querySelectorAll(".edit-dashboard-btn").forEach((btn) => {
          btn.addEventListener("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            const dashboardId = this.dataset.dashboardId;
            const dashboardCard = document.querySelector(
              `[data-dashboard-id="${dashboardId}"]`
            );
            const name = dashboardCard.querySelector("h3").textContent;
            const description =
              dashboardCard.querySelector("p")?.textContent || "";

            document.getElementById("editDashboardId").value = dashboardId;
            document.getElementById("editDashboardName").value = name;
            document.getElementById("editDashboardDescription").value =
              description;

            new bootstrap.Modal(
              document.getElementById("editDashboardModal")
            ).show();
          });
        });

        // Update Dashboard
        document
          .getElementById("updateDashboardBtn")
          .addEventListener("click", async function () {
            const dashboardId =
              document.getElementById("editDashboardId").value;
            const name = document
              .getElementById("editDashboardName")
              .value.trim();
            const description = document
              .getElementById("editDashboardDescription")
              .value.trim();

            if (!name) {
              alert("Please enter a dashboard name");
              return;
            }

            try {
              const response = await fetch(`/api/dashboards/${dashboardId}`, {
                method: "PUT",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ name, description }),
              });

              const result = await response.json();

              if (response.ok) {
                location.reload(); // Reload to show updated dashboard
              } else {
                throw new Error(result.error || "Failed to update dashboard");
              }
            } catch (error) {
              console.error("Error updating dashboard:", error);
              alert(`Error updating dashboard: ${error.message}`);
            }
          });

        // Delete Dashboard
        document.querySelectorAll(".delete-dashboard-btn").forEach((btn) => {
          btn.addEventListener("click", async function (e) {
            e.preventDefault();
            e.stopPropagation();
            const dashboardId = this.dataset.dashboardId;
            const dashboardCard = document.querySelector(
              `[data-dashboard-id="${dashboardId}"]`
            );
            const name = dashboardCard.querySelector("h3").textContent;

            if (
              !confirm(
                `Are you sure you want to delete "${name}"? This will also delete all widgets in this dashboard.`
              )
            ) {
              return;
            }

            try {
              const response = await fetch(`/api/dashboards/${dashboardId}`, {
                method: "DELETE",
              });

              const result = await response.json();

              if (response.ok) {
                location.reload(); // Reload to show updated list
              } else {
                throw new Error(result.error || "Failed to delete dashboard");
              }
            } catch (error) {
              console.error("Error deleting dashboard:", error);
              alert(`Error deleting dashboard: ${error.message}`);
            }
          });
        });
      });

      function showCreateDashboardModal() {
        new bootstrap.Modal(
          document.getElementById("createDashboardModal")
        ).show();
      }
    </script>
  </body>
</html>
